#!/bin/bash

# cs127's OpenMPT launch script for Linux
# version 0.3.0

# https://cs127.github.io


# Command line switches are the same as they are for the Windows executable,
# as seen in https://wiki.openmpt.org/Manual:_Command-line_Parameters
# but with two hyphens instead of a slash, and with hyphen-separated lowercase
# words instead of camelCase.

# Example: --no-assembly instead of /noAssembly

# Notes:
# The --shared argument has a short version -s,
# the --portable argument is ignored, since it can break things,
# and the --no-plugs and --no-dls arguments can also be written as
# --no-plugins and --no-soundfonts respectively.


files=()
args=""

# Set Wine options.
MPTDIR=/opt/openmpt
export WINEPREFIX=$HOME/.wine-openmpt
[ -z "$WINEDEBUG" ] && export WINEDEBUG=-all

# Detect if running as root.
if [ "$EUID" -eq 0 ]; then
    echo "OpenMPT should not be run as root."
    exit 64
fi

# Detect architecture.
if [ -z "$MPTARCH" ]; then
    uname -m | grep '64' &>/dev/null && MPTARCH=64 || MPTARCH=32
elif [ "$MPTARCH" != "32" ] && [ "$MPTARCH" != "64" ]; then
    echo "Invalid architecture '$MPTARCH'. Must be '32' or '64'."
    exit 65
fi

# Handle short options (currently only -s).
if [[ $1 != --* ]]; then
    while getopts "s" opt; do
        case $opt in
            s) args+="/shared " ;;
        esac
    done
fi

# Iterate through all arguments and parse them as options or files appropriately.
for arg in "$@"; do
    if [[ "$arg" == --* ]]; then
        [ "$arg" = "--no-plugins"    ] && arg="--no-plugs"
        [ "$arg" = "--no-soundfonts" ] && arg="--no-dls"
        [ "$arg" != "--portable"     ] && args+="$(echo "$arg" | sed -E -e 's/--/\//g' -e 's/-(.)/\U\1/g') "
    elif [[ "$arg" != -* ]]; then
        files+=("$(winepath -w "$arg")")
    fi
done

# Configure Wine if the current user has never run OpenMPT.
! [ -f "$WINEPREFIX/user.reg" ] && wine regedit "$MPTDIR/wine_config.reg" &>/dev/null

# Launch OpenMPT.
[ "$MPTARCH" = "64" ] && MPTARCHDIR=amd64 || MPTARCHDIR=x86
wine $MPTDIR/bin/$MPTARCHDIR/OpenMPT.exe $args "${files[@]}"
